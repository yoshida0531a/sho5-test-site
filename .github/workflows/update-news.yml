name: Update News with AI Summary

on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:

jobs:
  update-news:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v3
        
      - name: Generate AI-powered news
        env:
          HF_API_KEY: ${{ secrets.HF_API_KEY }}
        run: |
          python3 -c "
          import json, requests, os
          from datetime import datetime
          
          api_key = os.environ.get('HF_API_KEY', '')
          print(f'🔑 API Key: {\"✅\" if api_key else \"❌ Missing\"}')
          
          def summarize_with_ai(text):
              if not api_key:
                  return text[:200] + '...'
              try:
                  # 日本語対応のmT5モデルを使用
                  response = requests.post(
                      'https://api-inference.huggingface.co/models/megagonlabs/t5-base-japanese-web-8k',
                      headers={'Authorization': f'Bearer {api_key}'},
                      json={'inputs': f'要約: {text[:500]}', 'parameters': {'max_length': 200, 'min_length': 80}},
                      timeout=45
                  )
                  if response.status_code == 200:
                      result = response.json()
                      summary = result[0].get('generated_text', '').strip()
                      if summary and len(summary) > 20:
                          return summary
                      else:
                          print('⚠️ Empty summary, using fallback')
                          return text[:200] + '...'
                  print(f'⚠️ API Error: {response.status_code}')
                  # APIエラーの場合は日本語でシンプルな要約を作成
                  sentences = text.split('。')
                  if len(sentences) >= 2:
                      return sentences[0] + '。' + sentences[1][:50] + '。' if len(sentences[1]) > 50 else sentences[0] + '。' + sentences[1] + '。'
                  return text[:200] + '...'
              except Exception as e:
                  print(f'⚠️ AI Error: {e}')
                  # エラーの場合は日本語でシンプルな要約を作成
                  sentences = text.split('。')
                  if len(sentences) >= 2:
                      return sentences[0] + '。' + sentences[1][:50] + '。' if len(sentences[1]) > 50 else sentences[0] + '。' + sentences[1] + '。'
                  return text[:200] + '...'
          
          # Sample news with longer content
          news_data = [
              {
                  'title': 'AI技術の最新動向と社会への影響',
                  'content': '2025年に入り、AI技術の発展は新たな段階を迎えています。特に自然言語処理分野では、大規模言語モデルの精度向上により、より人間らしい対話が可能になりました。企業では業務効率化のためのAI導入が加速し、製造業、金融業、医療分野での実用化が進んでいます。一方で、AI倫理やプライバシー保護の議論も活発化しており、適切な規制とイノベーションのバランスが重要な課題となっています。',
                  'link': '#ai-tech'
              },
              {
                  'title': '持続可能な開発目標と企業の取り組み',
                  'content': '国連の持続可能な開発目標（SDGs）達成に向けて、世界中の企業が積極的な取り組みを展開しています。再生可能エネルギーの導入、循環型経済の推進、社会的責任投資の拡大など、多岐にわたる施策が実施されています。特に日本企業では、カーボンニュートラル実現に向けた技術開発と投資が加速しており、グリーン技術分野での国際競争力強化が期待されています。消費者の環境意識の高まりも企業行動の変化を後押ししています。',
                  'link': '#sustainability'
              }
          ]
          
          # Process with AI
          processed = []
          for item in news_data:
              summary = summarize_with_ai(item['content'])
              processed.append({
                  'title': item['title'],
                  'summary': summary,
                  'link': item['link'],
                  'pubDate': datetime.now().isoformat(),
                  'processed_at': datetime.now().isoformat()
              })
          
          with open('news-data.json', 'w', encoding='utf-8') as f:
              json.dump(processed, f, ensure_ascii=False, indent=2)
          
          print(f'✅ Processed {len(processed)} articles with AI')
          "
          
      - name: Create HTML
        run: |
          echo "Creating HTML from AI data..."
          python3 -c "
          import json
          from datetime import datetime
          
          # Load AI-generated data
          with open('news-data.json', 'r', encoding='utf-8') as f:
              news_data = json.load(f)
          
          # Generate HTML with AI summaries
          html = '''<!DOCTYPE html>
          <html lang=\"ja\">
          <head>
            <meta charset=\"UTF-8\">
            <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">
            <title>Newsroom - Shogo Fun Site</title>
            <style>
              * { margin: 0; padding: 0; box-sizing: border-box; }
              body { font-family: sans-serif; background: white; color: black; }
              header { text-align: center; font-size: 28px; font-weight: bold; margin: 20px 0; }
              .news-feed { width: calc(100% - 20px); max-width: 800px; margin: 0 auto; padding: 20px; }
              .news-item { border-bottom: 1px solid #ddd; margin-bottom: 20px; padding-bottom: 15px; }
              .news-item h3 { margin: 5px 0; font-size: 18px; }
              .news-item h3 a { color: black; text-decoration: none; }
              .news-item .date { margin: 5px 0; font-size: 12px; color: #666; }
              .news-item .summary { margin: 10px 0; font-size: 14px; line-height: 1.5; }
              footer { text-align: center; font-size: 12px; margin: 20px 0; }
            </style>
          </head>
          <body>
            <header>Newsroom</header>
            <section class=\"news-feed\">'''
          
          # Add AI-generated news items
          for item in news_data:
              pub_date = datetime.fromisoformat(item['pubDate']).strftime('%Y年%m月%d日')
              html += f'''
              <div class=\"news-item\">
                <h3><a href=\"{item['link']}\">{item['title']}</a></h3>
                <p class=\"date\">{pub_date}</p>
                <p class=\"summary\">{item['summary']}</p>
              </div>'''
          
          html += '''
            </section>
            <footer>Copyright © 2023-2025 Akira Yoshida.</footer>
          </body>
          </html>'''
          
          # Write HTML file
          with open('news.html', 'w', encoding='utf-8') as f:
              f.write(html)
          
          print(f'✓ Created HTML with {len(news_data)} AI-generated articles')
          "
          echo "✓ HTML generation completed"
          
      - name: Commit changes
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add news.html news-data.json
          
          if ! git diff --staged --quiet; then
            git commit -m "Update news 🤖"
            git push
          else
            echo "No changes"
          fi